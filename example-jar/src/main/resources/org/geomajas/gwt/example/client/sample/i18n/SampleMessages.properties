#
# This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
#
# Copyright 2008-2015 Geosparc nv, http://www.geosparc.com/, Belgium.
#
# The program is available in open source according to the GNU Affero
# General Public License. All contributions in this program are covered
# by the Geomajas Contributors License Agreement. For full licensing
# details, see LICENSE.txt in the project root.
#

#General messages:
treeGroupLayers=Layers
treeGroupMap=Map and rendering
treeGroupEditing=Geographic Editing
treeGroupOverviewMap=Overview Map
treeGroupMapController=Map Controller
treeGroupToolbarAndControllers=Toolbar
treeGroupAttributes=Attributes
treeGroupPlugins=Plug-ins
treeGroupGeneral=General
introductionTitle=Introduction
serverErrorTitle=Server error message
serverErrorDescription=<p>This sample demonstrates what a server-side error should look like. By pressing the button, a command is executed that then throws an exception.<br/>This exception is than shown on the client.</p>
serverErrorButton=Generate an exception on the server
pipelineConfigTitle=Pipeline configuration
pipelineConfigDescription=<p>This sample demonstrates the customization of a pipeline. In this case the getFeatures \
  pipeline is changed to post-process the features which are obtained. The map contains two layers which have the \
  same countries features as content. On the second layer, the pipeline is changed to convert the geometry to a \
  circle at the centroid of the feature, with a size related to the area of the feature.</p>

dynamicUrlTitle=Dynamic URL
dynamicUrlDescription=<p>This sample shows how the hash part of the URL changes according to map position</p>\
                      <p>A dynamic url controller will include information in the URL so that it can be used to bookmark current map position and zoom level.</p>\
                      <p>It will also assure that the map navigates to position from a bookmarked URL.</p>


#OpenStreetMap sample:
osmTitle=OpenStreetMap layer
osmDescription=<p>This sample shows a map with the OpenStreetMap raster layer. Initially it should show practically the whole world.</p><p>A mouse scroll controller is present that allows you to zoom in and out and a pan controller that allows you to pan on the map. Also the buttons in the upper left corner of the map allow you to navigate.</p><p><b>Note also that you are not allowed to zoom or pan beyond the world maximum bounds.</b></p>

#WMS sample:
wmsTitle=WMS layer
wmsDescription=<p>This sample shows a map with a WMS raster layer. Initially it should show practically the whole world.</p><p>A mouse scroll controller is present that allows you to zoom in and out and a pan controller that allows you to pan on the map. Also the buttons in the upper left corner of the map allow you to navigate.</p><p><b>Note also that you are not allowed to zoom or pan beyond the world maximum bounds.</b></p>

#Client WMS sample:
clientWmsTitle=Client-side WMS layer
clientWmsDescription=<p>This sample shows a map to which you can add WMS layers. \
Initially it should show practically the whole world.</p>\
<p>You can add a WMS layer from our geoserver by pressing the 'Add Layer' button</p>\
<p>You can enter a different URL and layer name  to add a layer from a different WMS server, if you know one.</p>\
<p>A mouse scroll controller is present that allows you to zoom in and out and a pan controller \
that allows you to pan on the map. Also the buttons in the upper left corner of the map allow you to navigate.</p>\
<p><b>Note also that you are not allowed to zoom or pan beyond the world maximum bounds.</b></p>\

#GeoTools sample:
geotoolsTitle=Geotools layer
geotoolsDescription=<p>This sample shows a map with a GeoTools vector layer.</p><p>The GeoTools layer is basically a wrapper around the GeoTools DataStore, so it can use any type of DataStore that GeoTools supports (ShapeFile, WFS, PostGis, Oracle, ArcSDE, ...)</p><p>A mouse scroll controller is present that allows you to zoom in and out and a pan controller that allows you to pan on the map.</p>

#Navigation sample:
navigationTitle=Navigation
navigationDescription=<p>This samples tests explicit navigation by calling the MapView methods directly.</p><p>There is a maximum bounds that you can never cross. So when completely zoomed out your movement is limited.</p>
navigationBtnZoomIn=Zoom in
navigationBtnZoomOut=Zoom out
navigationBtnPosition=Apply fixed position
navigationBtnTranslate=Move the map
navigationBtnBbox=Apply fixed bounds

#Printing sample
defaultPrintControllerTitle=Default print
printingDescription=<p>Printing plug-in sample.</p>

#CRS sample:
crsTitle=CRS transformations
crsDescription=<p>Two vector layers are displayed, the red layer uses Mercator, the green layer lon-lat. The square should overlap (making it brownish), the horizontal box should have a green border, the vertical box a red one.</p><p>A mouse scroll controller is present that allows you to zoom in and out and a pan controller that allows you to pan on the map.</p><p>The idea here is to test CRS transformations.</p>

#Unit types sample
unitTypesTitle=Unit types
unitTypesDescription=<p>This samples shows how to switch the scalebar on the map between the English and the metric system.</p>
switchUnitTypes=Switch unit type
unitTypeEnglish=Switching to English system...
unitTypeMetric=Switching to the metric system...

#Toggle maxbounds sample
maxBoundsToggleTitle = Maximum bounds
maxBoundsToggleDescription = <p>This sample shows how to change the maximum allowed bounds on a map.</p><p>By clicking on the button the bounds are switched between whole world and the country of Belgium.</p>
toggleMaxBoundsBelgium=Toggle maximum bounds to Belgium
toggleMaxBoundsWorld=Toggle maximum bounds to the whole world

#Toggle pan buttons and scalebar example
panScaleToggleTitle = Map add-ons
panScaleToggleDescription = <p>This example shows how to switch on and off the navigation buttons and the scalebar.</p>
togglePanButtons = Toggle navigation
toggleScaleBar = Toggle scalebar

#Custom map addons
groupAndSingleTitle = Custom addons
groupAndSingleDescription = <p>A slightly bigger pan controller.</p><p>Zoom in and zoom out are grouped together in one MapAddonGroup.</p><p>The other 2 addons are SingleMapAddons.</p>
panAndSliderTitle = Zoom slider
panAndSliderDescription = <p>A configurable zoom slider, accompanied by a custom pan controller (slightly bigger and dark gray arrows).</p>

# Rendering Sample:
renderingTitle=Basic Rendering
renderingDescription=<p>This example shows how one can render simple shapes, and use the GraphicsContext in general.</p>
renderingDrawCircle=Draw Circle
renderingDrawLineString=Draw LineString
renderingDrawPolygon=Draw Polygon
renderingDrawText=Draw Text
renderingDrawRectangle=Draw Rectangle
renderingDrawImage=Draw Image
renderingTransform=Transform elements
renderingNewCursor=New cursor above rectangle
renderingDelete=Delete everything

# Screen versus World space
screenWorldTitle=Screen space vs World space
screenWorldDescription=<p>This example shows the difference between drawing objects in screen space and world space. Screen space is expressed in fixed pixel coordinates, while world space is expressed in the map''s CRS.</p><p>Try navigating on the map to actually see the difference; the world space image will move as you navigate.</p>
screenWorldBTNScreen=Draw in Screen space
screenWorldBTNWorld=Draw in World space
screenWorldBTNScreenDelete=Delete from Screen space
screenWorldBTNWorldDelete=Delete from World space

# Change Layer opacity:
layerOpacityTitle=Layer opacity
layerOpacityDescription=<p>This example demonstrates how the opacity of a <b>raster</b> layer can be changed in real time.</p>

# Editing a Point layer:
editPointLayerTitle=Edit a Point layer
editPointLayerDescription=<p>This example demonstrates the ability to edit a Point layer (airports in Florida). Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# Editing a LineString layer:
editLineLayerTitle=Edit a LineString layer
editLineLayerDescription=<p>This example demonstrates the ability to edit a LineString layer. Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# Editing a Polygon layer:
editPolygonLayerTitle=Edit a Polygon layer
editPolygonLayerDescription=<p>This example demonstrates the ability to edit a Polygon layer. Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# Editing a MultiPoint layer:
editMultiPointLayerTitle=Edit a MultiPoint layer
editMultiPointLayerDescription=<p>This example demonstrates the ability to edit a MultiPoint layer. Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# Editing a MultiLineString layer:
editMultiLineLayerTitle=Edit a MultiLineString layer
editMultiLineLayerDescription=<p>This example demonstrates the ability to edit a MultiLineString layer. Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# Editing a MultiPolygon layer:
editMultiPolygonLayerTitle=Edit a MultiPolygon layer
editMultiPolygonLayerDescription=<p>This example demonstrates the ability to edit a MultiPolygon layer. Just activate the editing tool in the toolbar, and start!</p><p><b>Note that most actions are triggered from the right mouse menu.</b></p><p>Also note that editing is restricted to the layer''s bounds.</p>

# OverviewMap sample:
overviewMapTitle=Overview Map
overviewMapDescription=<p>This sample demonstrates how an overview map can work together with a normal map.</p>
overviewMapToggleRectStyle=Change rectangle style
overviewMapToggleExtentStyle=Change maximum extent style
overviewMapToggleExtent=Toggle maximum extent (on/off)

# Custom Controller sample:
customControllerTitle=Custom controller
customControllerDescription=<p>This sample shows how a custom controller can be created and activated on a certain map.</p><p>In this particular example, the controller displays pixel (screen) and latlon (world) coordinates of mouse move events.</p>
customControllerScreenCoordinates=Position in screen coordinates
customControllerWorldCoordinates=Position in world coordinates

#Controller on element sample:
controllerOnElementTitle=Controller on element
controllerOnElementDescription=<p>This sample shows how a custom controller can be added to a specific element on the map.</p><p>In this example mouse listeners are used to make a rectangle transparent when the mouse hovers over it.</p>

#Rectangle controller sample
rectangleControllerTitle=Rectangle Controller
rectangleControllerDescription=<p>This sample shows how a AbstractRectangleController can be used and extended.</p><p>In this example a RectangleController is created to measure areas.</p><p>Try selecting an area on the map.</p>
rectangeControllerOutput=<p>You picked an area of<ul><li>{0}km width</li><li>{1}km height</li></ul></p><p>The total area is {2}km²</p>

#Circle controller sample
circleControllerTitle=Circle Controller
circleControllerDescription=<p>This sample shows how a AbstractCircleController can be used and extended.</p><p>In this example a AbstractCircleController is created to measure areas.</p><p>Try selecting an area on the map.</p>
circleControllerOutput=<p>The total size of the area you selected is: {0}²</p>

#Fallback controller sample:
fallbackControllerTitle=Fall-back controller
fallbackControllerDescription=<p>This sample shows how to change the fall-back controller on a map. The fall-back controller is an optional controller that is used when no other active controller is set. By default that would be a navigation controller, but in this sample this fall-back controller is changed to the measure distance controller.</p>
fallbackControllerExplanation=<p>When there is no active tool in the toolbar, by default, the measure distance controller should be active.</p>

#MouseMoveListener sample:
mouseMoveListenerTitle=Listeners
mouseMoveListenerDescription=<p>A listener is a passive controller on the map. It is notified of map events, but cannot interfere with their operations. It can only react in a passive way.</p>

#MultipleListeners sample:
multipleListenersTitle=Multiple listeners
multipleListenersDescription=<p>This showcase demonstrates the use of multiple Listeners on a map. For controllers there can be only one active at any given time. For these passive listeners, there is no such limit.</p>
multipleListenersBtn=Add Listener that prints the mouse position in pixel coordinates
multipleListenersPortletTitle=Listener result
multipleListenersPortletText=Position
multipleListenersCount=Total amount of listeners on map: {0}

#Login sample:
loginTitle=Login widget
loginDescription=<p>This sample shows the login widget, and allows you to call the login commands.</p><p>You can log in with the following user-name and password:</p><p><b>User name: luc<br>Password: luc</b></p><p>Look at the bottom left to see which user is logged in.</p>
loginSuccess=Login attempt was successful. User token={0}
loginFailure=Login attempt has failed.
logoutSuccess=User has logged out successfully.
logoutFailure=Logout attempt has failed.

#ToolbarNavigation Sample:
toolbarNavigationTitle=Navigation
toolbarNavigationDescription=<p>This example shows how users can navigate the map using a toolbar.</p><p>Click on a button in the toolbar to switch to that specific navigation mode.</p>

#ToolbarSelection Sample:
toolbarSelectionTitle=Selection
toolbarSelectionDescription=<p>This example shows how to use selection tools in the toolbar.</p><p>First use the first button (Select features) to select some features. This is done by clicking the button and drawing a rectangle on the map.</p><p>After you selected some features you can use the second button to zoom into your selection or the third button to pan to your selection so that your selection is centered.</p>

#ToolbarMeasure Sample:
toolbarMeasureTitle=Measure distances
toolbarMeasureDescription=<p>This example shows how to use the measure tool in the toolbar.</p>Click on the button in the toolbar to activate the measure tool. Once the tool is activated you can measure distances on the map.</p><p>Double click on the map or use the right mouse menu to deactivate the measure tool.</p>
toolbarMeasureAreaLocationTitle=Measure distances, area and position
toolbarMeasureAreaLocationDescription==<p>This example shows how to use the extended measure tool in the toolbar.</p>Click on the button in the toolbar to activate the measure tool. Once the tool is activated you can measure distances on the map.</p><p>Double click on the map or use the right mouse menu to deactivate the measure tool.</p>

#ToolbarFeatureInfo Sample:
toolbarFeatureInfoTitle=Feature info
toolbarFeatureInfoDescription=<p>This example shows how to use the feature info tool in the tool bar.</p><p>Just activate the tool in the tool bar and click on one of the features on the map.</p>

#ScaleSelect with default zoomlevels:
scaleSelectDefaultTitle=Scale select default
scaleSelectDefaultDescription=<p>This example shows how a ScaleSelect widget can be added to the tool bar.</p><p>This \
  is done in two ways. The left ScaleSelect is added through configuration. The right one through \
  code. Both instances read the zoom-levels read from the map configuration. The left ScaleSelect has some extra \
  settings to round the displayed scale values.</p><p>Note that you can also type scales manually inside the \
  ScaleSelect widget.</p>

#ScaleSelect with custom zoomlevels:
scaleSelectCustomTitle=Scale select custom
scaleSelectCustomDescription=<p>This example shows how a ScaleSelect widget can be added to the tool bar.</p><p>The ScaleSelect widget is filled with custom zoom-levels within the GWT code.</p><p>Note that you can also type scales manually inside the ScaleSelect widget.</p>

#Custom toolbartools sample
customToolbarToolsTitle=Custom tools
customToolbarToolsDescription=<p>This example shows how you can add custom tools to the tool bar.</p><p>In this example, a tool is added that will display the coordinates of the clicked point.</p>
customToolbarToolsTooltip=Show coordinates

#Custom toolbar sample
customToolbarTitle=Custom toolbar
customToolbarDescription=<p>This example shows how someone can create a custom toolbar without using configuration.</p>The toolbar is created using GWT coding.</p>

#Layertree group
treeGroupLayerTree=Layertree & legend

#Layer tree sample
layertreeTitle=Layertree
layertreeDescription=<p>This example shows the use of the LayerTree.</p><p><b>First select a layer in the tree.</b></p><p>At this point, the buttons above the tree will be applied on the selected layer! Try clicking the first button to toggle the layers visibility.</p>

#Legend sample:
legendTitle=Legend
legendDescription=<p>This example demonstrates the interaction between the legend and the layer''s visibility status. By turning a layer invisible, it''s associated styles should automatically disappear from the legend, and vice versa.</p>

#Layer order sample:
layerOrderTitle=Layer Order
layerOrderDescription=<p>The example allows the user to change the order of the layers on the map.</p>
layerOrderUpBtn=Move countries up
layerOrderDownBtn=Move countries down
layerOrderTxt=<b>Move the countries layer up and down. Note that it can never move behind the raster layer.</b>

#wms
wmsTxt=Add WMS Layers
addLayer=Add Layer
layerUrl=WMS URL
layerName=Layer Name

#FeatureListGrid sample:
fltTitle=Feature list grid
fltDescription=<p>This sample displays a feature list grid, where one can test selection of features in both the grid and the map. Selection in those 2 widgets should always be in sync.</p>

#FeatureSearch sample:
searchTitle=Searching
searchDescription=<p>This sample demonstrates the use of the search functionality within Geomajas. Note that a maximum result of 50 features has been applied on a search query.</p>

#FeatureSearch - attribute test:
search2Title=Searching (attribute test)
search2Description=<p>This sample tests the search for all types of attributes.</p><p>The data is not real live-data, but rather XML configured bogus data to test the search.</p>
search2InnerTitle=This is a test! Search for any type of attribute...

#EditableGrid:
editableGridTitle=Editable grid (associations)
editableGridDescription=<p>This sample shows the association editing capabilities on a grid.</p>\
<p>The data is not real live-data, but rather XML configured bogus data.</p>\
<p>Double-click on a row of the grid to start editing. \
A popup will be shown with an editable detail form. \
Primitive and association attributes can be edited. \
One-to-many attributes will open in a separate popup window after clicking the 'more...' link.</p>

# EditAttribute sample:
editAttributeTitle=Attribute form
editAttributeDescription=<p>This sample show the default attribute form generated from the layer description.</p>

attributeIncludeInFormTitle=Excluding attributes
attributeIncludeInFormDescription=<p>This sample shows how to exclude certain attributes from the attribute forms.</p><p>In this particular case, there is an integer attribute configured in the layer definition which should be excluded from the form.</p><p>Concretely, 3 of the 4 configured attributes may only be visible in the form.</p><p>See the layer XML configuration in the (source code button) for more details.</p>

attributeCustomTypeTitle=Custom Form input field
attributeCustomTypeDescription=<p>This sample shows how to use custom defined input types in an attribute form. The fourth attribute has defined a custom type called 'myType' that is used in the forms.</p><p>Note that before being able to use these custom types, they must be registered in the AttributeFormItemFactory.</p>

attributeCustomFormTitle=Custom Attribute Form
attributeCustomFormDescription=<p>This sample shows how to define a completely custom attribute form and use it to edit feature attributes.</p>

# Canvas MapAddon sample:
canvasMapAddonTitle=Canvas MapAddon
canvasMapAddonDescription=<p>This sample shows how to add and position Canvas Widgets to the map. 2 Canvas objects are added: a button in the top right corner, and a slider in the right bottom. Notice the widgets will stay on the same relative position when the map is resized.</p>
