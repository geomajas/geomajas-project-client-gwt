<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2014 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<chapter id="chapter-configuration">
  <title>Configuration</title>

  <section id="dependencies">
    <title>Dependencies</title>

    <para>By default plug-ins are not added to a Geomajas project, so in order
    to use this plug-in make sure it is included in your project. If you are
    using Maven, you can add the following dependency to your pom to use the
    SmartGWT widgets:</para>

    <example>
      <title>Plug-in dependency</title>

      <programlisting language="xml">&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.widget&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-widget-utility-gwt&lt;/artifactId&gt;
    &lt;version&gt;1.0&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
    </example>
  </section>

  <section>
    <title>GWT Modules</title>

    <para>Once you have the plug-in on your classpath, you still need to load
    the required GWT modules. This plug-in contains GWT widgets based on the
    SmartGWT library. Therefore, we have tried to follow the SmartGWT way of
    working, whereby multiple GWT modules have been defined: one for the
    widgets and several for the supported SmartGWT themes.</para>

    <para>By default SmartGWT supports the following themes: "Enterprise",
    "Enterprise Blue", "Graphite" and "Simplicity". The idea is to have an
    extension for each of these themes within this plug-in, so that you can
    apply the same style on these custom widgets as you have for other
    SmartGWT widgets.</para>

    <note>
      <para>Currently only the SmartGWT "Enterprise" theme has been supported.
      Others will folow in future versions.</para>
    </note>

    <para>The following is an example that loads the GWT module for the
    widgets plus the Enterprise theme extension:</para>

    <example>
      <title>Loading the GWT modules</title>

      <programlisting>&amp;lt;!-- Plugin module: --&amp;gt;
&amp;lt;inherits name="org.geomajas.widget.utility.gwt.GwtUtilityWidgets" /&amp;gt;

&amp;lt;!-- Plugin Enterprise theme: --&amp;gt;
&amp;lt;inherits name="org.geomajas.widget.utility.theme.enterprise.EnterpriseResources"/&amp;gt;

&amp;lt;!-- Inherited SmartGWT themes: --&amp;gt;
&amp;lt;inherits name="com.smartclient.theme.enterprise.Enterprise"/&amp;gt;
&amp;lt;inherits name="com.smartclient.theme.enterprise.EnterpriseResources"/&amp;gt;</programlisting>
    </example>
  </section>

  <section>
    <title>Widgets</title>

    <para>This part will go over all widgets one by one. Some of the widgets
    support backend configuration which will be discussed in detail
    below.</para>

    <section>
      <title>Ribbon</title>

      <para>The ribbon is a office like broad toolbar with clear text and
      icons on the main buttons. It has support for not just buttons, but any
      other widget as well. The main idea for the ribbon is that it should
      easily work together with a MapWidget, by providing a way of using
      navigation controllers etc. In order to accomplish this goal, it is
      possible to configure the ribbon within the backend Spring
      configuration, using the tools that are already available for the normal
      Toolbar widget (from the SmartGWT face).</para>

      <para>This part will focus on how to configure a Ribbon widget from the
      backend Spring configuration. Visit the "Howto" chapter in order to find
      out how to create custom ribbon columns or how to define custom ribbon
      styles (theming). Let us start with an example Ribbon configuration for
      a simple Ribbon (without tabs):</para>

      <example>
        <title>Example Ribbon configuration</title>

        <para><programlisting>&lt;!-- application configuration --&gt;
&lt;bean name="app" class="org.geomajas.configuration.client.ClientApplicationInfo"&gt;
   &lt;property name="maps"&gt;
      &lt;list&gt;
         &lt;ref bean="mainMap" /&gt;
         &lt;ref bean="overviewMap" /&gt;
      &lt;/list&gt;
   &lt;/property&gt;
   &lt;property name="widgetInfo"&gt;
      &lt;map&gt;
         &lt;entry key="<emphasis role="bold">ribbon-bar-1</emphasis>"&gt;
            &lt;ref bean="<emphasis role="bold">ribbon-bar-1</emphasis>" /&gt;
         &lt;/entry&gt;
      &lt;/map&gt;
   &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- ribbon configuration --&gt;
&lt;bean <emphasis role="bold">name="ribbon-bar-1"</emphasis> class="org.geomajas.widget.utility.configuration.RibbonBarInfo"&gt;
   &lt;property name="groups"&gt;
      &lt;list&gt;
         &lt;bean class="org.geomajas.widget.utility.configuration.RibbonGroupInfo"&gt;
            &lt;property name="title" value="Navigation" /&gt;
            &lt;property name="columns"&gt;
               &lt;list&gt;
                  &lt;bean class="org.geomajas.widget.utility.configuration.RibbonColumnInfo"&gt;
                     &lt;property name="type" value="ToolbarActionButton" /&gt;
                     &lt;property name="tools"&gt;
                        &lt;list&gt;
                           &lt;ref bean="ZoomIn" /&gt;
                        &lt;/list&gt;
                     &lt;/property&gt;
                  &lt;/bean&gt;
                  &lt;bean class="org.geomajas.widget.utility.configuration.RibbonColumnInfo"&gt;
                     &lt;property name="type" value="ToolbarActionButton" /&gt;
                     &lt;property name="tools"&gt;
                        &lt;list&gt;
                           &lt;ref bean="ZoomOut" /&gt;
                        &lt;/list&gt;
                     &lt;/property&gt;
                  &lt;/bean&gt;
                  &lt;bean class="org.geomajas.widget.utility.configuration.RibbonColumnInfo"&gt;
                     &lt;property name="type" value="ToolbarActionList" /&gt;
                     &lt;property name="tools"&gt;
                        &lt;list&gt;
                           &lt;ref bean="ZoomPrevious" /&gt;
                           &lt;ref bean="ZoomNext" /&gt;
                        &lt;/list&gt;
                     &lt;/property&gt;
                  &lt;/bean&gt;
               &lt;/list&gt;
            &lt;/property&gt;
         &lt;/bean&gt;
      &lt;/list&gt;
   &lt;/property&gt;
&lt;/bean&gt;</programlisting></para>
      </example>

      <para>The example above defines a single Ribbon bar with a single group
      of columns. The three columns within the group are the most basic
      elements within a Ribbon. Such columns can be grouped together within a
      RibbonGroup under a single title. In the case above, the group's title
      is "Navigation". Since the columns within this group contain zooming
      actions (ZoomIn, ZoomOut, ZoomPrevious, ZoomNext) the title "Navigation"
      is quite appropriate. As for the names of the tools - those are the same
      as the tools used for the normal Toolbar widget from the SmartGWT
      face.</para>

      <para>The zooming actions used within the columns are supported through
      2 types of Ribbon columns: a single big button (type = "ActionButton")
      and a vertical list of action buttons (type = "ActionList"). By default
      these are the only types known to the Ribbon widget, but custom types
      can be defined as well. Visit the "Howto" chapter to see how to define
      such custom types.</para>

      <para>Note also that the Ribbon above has been defined with a name
      "ribbon-bar-1" (top line). This name identifies the Ribbon configuration
      so that the client can request it during initialization. In order to
      create a Ribbon widget using the above configuration, use the following
      Java code on the client:</para>

      <programlisting>RibbonBarLayout ribbon = new RibbonBarLayout(mapWidget, "app", "ribbon-bar-1");</programlisting>

      <para>The Ribbon bar widget with the above configuration will look like
      this:</para>

      <screenshot>
        <screeninfo>Example Ribbon bar</screeninfo>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/ribbon-bar-1.png" />
          </imageobject>
        </mediaobject>
      </screenshot>

      <para>Ok, so that was a simple Ribbon widget with a single bar. Real
      world applications may often contain a great deal of actions within a
      menu, and so for complex applications a tabbed version of the Ribbon
      might be in order. The configuration for a tabbed Ribbon, is as
      follows:</para>

      <example>
        <title>Example Ribbon configuration</title>

        <para><programlisting>&lt;bean name="<emphasis role="bold">tabbed-ribbon-1</emphasis>" class="org.geomajas.widget.utility.configuration.RibbonInfo"&gt;
   &lt;property name="tabs"&gt;
      &lt;list&gt;
         &lt;bean class="org.geomajas.widget.utility.configuration.RibbonBarInfo"&gt;
            &lt;property name="title" value="TAB Nr 1" /&gt;
            ....
         &lt;/bean&gt;
         &lt;bean class="org.geomajas.widget.utility.configuration.RibbonBarInfo"&gt;
            &lt;property name="title" value="TAB Nr 2" /&gt;
            ....
         &lt;/bean&gt;
         &lt;bean class="org.geomajas.widget.utility.configuration.RibbonBarInfo"&gt;
            &lt;property name="title" value="TAB Nr 3" /&gt;
            ....
         &lt;/bean&gt;
      &lt;/list&gt;
   &lt;/property&gt;
&lt;/bean&gt;</programlisting></para>
      </example>

      <para>As you can see, a tabbed Ribbon consists of a list of Ribbon bars.
      Note though that this time, the Ribbon bars each have a title. This is
      the label that will be used on the actual tabs.</para>

      <para>Again, the top level has a name "tabbed-ribbon-1" so that the
      client widgets can use this configuration part. The following Java code
      will create a tabbed Ribbon using the above configuration:</para>

      <programlisting>RibbonTabLayout ribbon = new RibbonTabLayout(mapWidget, "app", "tabbed-ribbon-1");</programlisting>

      <para>Note that a different type of widget is used (RibbonTabLayout
      instead of RibbonBarLayout)!</para>
    </section>
  </section>
</chapter>
