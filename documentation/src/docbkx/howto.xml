<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2015 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-howto">
  <title>How-to</title>

  <section>
    <title>How to set the size of feature attribute windows</title>

    <para>By default, the size of the feature attribute windows are determined
    automatically.</para>

    <para>If your features have a lot of attributes this may not be ideal. You
    can force the size of the feature attribute windows using the WidgetLayout
    class. Add something like the following in your GWT entrypoint
    class:</para>

    <informalexample>
      <programlisting>public void onModuleLoad() {
    // force a fixed height to feature attribute windows,
    // preventing them from becoming too big
    WidgetLayout.featureAttributeWindowHeight = 
        Window.getClientHeight() - WidgetLayout.windowOffset * 4;
    WidgetLayout.featureAttributeWindowWidth = 470;
    ....
}
</programlisting>
    </informalexample>
  </section>

  <section>
    <title>How to assure something is done once the map is initialized</title>

    <para>When your application starts, you may need to wait until the map is
    initialized. For example, trying to read the available layers or access
    them only works once the map initialization is finished. To avoid the need
    to write boilerplate code, you can use the runWhenInitialzed method. For
    example, to apply certain bounds, you can use:</para>

    <informalexample>
      <programlisting>final MapModel mapModel = mapWidget.getMapModel();
mapModel.runWhenInitialized(new Runnable() {
    public void run() {
        final Bbox initialBounds = new Bbox(mapModel.getMapInfo().getInitialBounds());
        mapModel.getMapView().applyBounds(initialBounds, ZoomOption.LEVEL_FIT);
    }
});
</programlisting>
    </informalexample>

    <para>Note that this really only runs once. If the change needs to be
    applied each time the map is reconfigured (for example when the login
    token changes), then you should use addMapModelChangedHandler
    instead.</para>
  </section>

    <section>
        <title>How to add a smartgwt Canvas widget to the map</title>

        <para>When adding a (custom) widget to the map, this is generally possible by adding
        the widget as a child to the MapWidget. Position can be applied via <code>top</code> and
            <code>left</code> css parameters.</para>

        <para>However, some issues arise when widgets extending smartgwt's <code>Canvas</code> class
            are positioned at the right hand side or bottom of the map. On window resize, this can
        lead to the map not being resized correctly.
            Solution for this is using the <code>CanvasMapAddon</code> class: this wraps the
            <code>Canvas</code> class in a <code>MapAddon</code>. The wrapper is then added as a map addon
        and both map and widget will respond correctly on resize events.</para>

        <para>Example for placing a button on the top right of the map with some additional offset:</para>

        <informalexample>
            <programlisting>// create button and place as a MapAddon on the map, top right
IButton editorAddButton = new IButton("A button");
CanvasMapAddon buttonMapAddon = new CanvasMapAddon("exampleButton", editorAddButton, map);
buttonMapAddon.setAlignment(Alignment.RIGHT);
buttonMapAddon.setVerticalAlignment(VerticalAlignment.TOP);
buttonMapAddon.setHorizontalOffset(100); // in this case: offset from the right
buttonMapAddon.setVerticalOffset(50); // in this case: offset from the top
map.registerMapAddon(buttonMapAddon);</programlisting>
        </informalexample>
    </section>
</chapter>
